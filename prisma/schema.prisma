// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}




model Account {
  id                 String  @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String? @db.Text
  access_token       String? @db.Text
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String? @db.Text
  session_state      String?
  oauth_token_secret String?
  oauth_token        String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Batiment {
  id       Int      @id @default(autoincrement())
  nom      String
  adresse  String
  appartements Appartement[]
}

model Appartement {
  id                    Int         @id @default(autoincrement())
  titre                 String
  description           String
  prix                  Int
  nombre_chambres       Int
  surface               Int
  etage                 Int?
  adresse               String?
  ville                 String?
  code_postal           String?
  pays                  String?
  date_disponibilite    DateTime?
  date_mise_a_jour      DateTime?   @updatedAt
  date_creation         DateTime    @default(now())
  type_de_bien          String
  type_de_transaction   String
  meuble                Boolean     @default(false)
  balcon                Boolean     @default(false)
  terrasse              Boolean     @default(false)
  parking               Boolean     @default(false)
  ascenseur             Boolean     @default(false)
  cave                  Boolean     @default(false)
  vue_sur_la_mer        Boolean     @default(false)
  vue_sur_la_ville      Boolean     @default(false)
  proximite_commerces   Boolean     @default(false)
  proximite_transports  Boolean     @default(false)
  images                Image[]
  batiment              Batiment?   @relation(fields: [batimentId], references: [id])
  batimentId            Int?
}


model Image {
  id          Int     @id @default(autoincrement())
  url         String
  appartement Appartement @relation(fields: [appartementId], references: [id])
  appartementId Int
}



